// Buttonsmith (shift cmd b)

// TO DO LIST

// - Update to support CSS style padding


var layer = selection[0];
var parentName = layer.parentGroup().name();
var parentGroup = layer.parentGroup();
var buttonContainerName = 'styled button';


selection.count() === 0 ? log('No Selection') : buttonCheck();

log(typeof selection + ' <- selection type');


function buttonCheck() {

  layer.parentGroup().name() == buttonContainerName ? log('true') : createButton();

}

function createButton() {


  // Input window for settings for button
  var inputWindow = createInput();
  var options = handleAlertResponse(inputWindow,inputWindow.runModal());



  function handleAlertResponse(inputWindow, responseCode){

    if (responseCode == "1000") {
        function valAtIndex (view, index) {
            var paddingInput = view.viewAtIndex(index).stringValue();
            var objCSplit = paddingInput.componentsSeparatedByString(',');

            // return view.viewAtIndex(index).stringValue();
            return objCSplit;
        }

        return {
            radius: valAtIndex(inputWindow,3),
            padding: valAtIndex(inputWindow,1)
        }
    }

    return null;

  }

log(options.padding + ' <- padding input');
log(options.radius + ' <- radius input');
    // Variables declared by UI input modal

    var paddingY = options.padding[0],
        paddingX = options.padding[1];



    // Establish text position
    var layerFrame = layer.frame(),
        textX = layerFrame.x(),
        textY = layerFrame.y(),
        textHeight = layerFrame.height(),
        textWidth = layerFrame.width();


    // Start the magic (Note: make this note better)
    var newGroup = parentGroup.addLayerOfType('group');
    newGroup.name = buttonContainerName;
    newGroup.frame().setX(textX);
    newGroup.frame().setY(textY);
    newGroup.frame().addHeight(textHeight-100);
    newGroup.frame().addWidth(textWidth-100);
    newGroup.frame().addWidth(paddingX);
    newGroup.frame().addHeight(paddingY);
    newGroup.frame().addX(-paddingX/2);
    newGroup.frame().addY(-paddingY/2);

    // Janky fix for main artboard selection issue
    layer.frame().subtractX(textX);
    layer.frame().subtractY(textY);
    layer.frame().addX(paddingX/2);
    layer.frame().addY(paddingY/2);

    // Set BG Rectangle to size behind text W/ 0 padding
    var newBG = newGroup.addLayerOfType('rectangle');
    newBG.frame().addHeight(textHeight-100);
    newBG.frame().addWidth(textWidth-100);

    // Resize BG Rectangle and Group to size of desired button
    newBG.frame().addWidth(paddingX);
    newBG.frame().addHeight(paddingY);



    // Radius Magic (Note: make this note better)
    var radius = options.radius[0];
        firstObject = newBG.layers().firstObject();

    firstObject.setFixedRadius(radius);
    firstObject.resetPointsBasedOnUserInteraction();

    // Add current fill to rectangle object
    var styleBG = newBG.style().fills();
    styleBG.addNewStylePart();


    // There is a bug with this where the group will be in the
    // top right of the artboard until it is selected.
    var dupLayer = layer.duplicate();
    parentGroup.removeLayer(dupLayer);
    newGroup.addLayer(dupLayer);
    parentGroup.removeLayer(layer);

}

function createInput() {
  var inputWindow = COSAlertWindow.new();

  function createTextFieldWithLavel(label,defaultValue) {
    inputWindow.addTextLabelWithValue(label);
    inputWindow.addTextFieldWithValue(defaultValue);
  }

  // Heading & Description
  inputWindow.setMessageText("Buttonsmith");
  inputWindow.setInformativeText("Create Buttons with ease!");

  // Input W/ Labels
  createTextFieldWithLavel("Padding (x-padding, y-padding):","5, 10");
  createTextFieldWithLavel("Border-Radius:","0");

  // Actions buttons
  inputWindow.addButtonWithTitle('Build Button');
  inputWindow.addButtonWithTitle('Cancel');

  return inputWindow;
}
